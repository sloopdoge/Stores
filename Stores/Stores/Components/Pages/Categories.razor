@page "/categories"
@inject ICategoryService CategoryService
@inject NavigationManager NavigationManager
@attribute [StreamRendering(true)]

<PageTitle>Categories</PageTitle>


<div style="display: flex; justify-content: space-between; align-items: center;">
    <h1>Categories</h1>
    <CreateButton buttonName="category" uri="/category" />
</div>

@if (categories == null)
{
    <span> Loading... </span>
}
else if (categories.Count == 0)
{   
    <div>
        <span> No categories found </span>
    </div>
}
else {
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in categories)
            {
                <tr>
                    <td>@category.CategoryTitle</td>
                    <td>
                        <EditButton uri="/category/" id="@category.CategoryId"/>
                        <DeleteButton itemId="@category.CategoryId" entityType="@EntityType.Category" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    List<Category> categories = null;

    protected override async Task OnInitializedAsync() => categories = await CategoryService.GetCategories();
}